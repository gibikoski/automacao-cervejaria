# **4. Pinouts e Conex√µes**

## **Vis√£o Geral**

Esta se√ß√£o mapeia os pinouts e conex√µes dos componentes eletr√¥nicos (circuitos integrados e **SSR-10DA**) listados na *3. Lista de Equipamentos e BOM* do documento *Automacao_Cervejaria_Especificacoes_v1.0.1_20250420.md*. Componentes passivos (**Manta 500W**, **Fus√≠vel 3 A**, **Bateria 18650**, **C√©lulas de carga**) s√£o mencionados como refer√™ncia, sem pinout detalhado. Cada fun√ß√£o (**Controle de Fermenta√ß√£o**, **Balan√ßa de Volume**, **Dens√≠metro Flutuante**, **Controle e Monitoramento**) tem tabelas de/para independentes para cada inst√¢ncia (16 no total), com cores, negrito, it√°lico, e diagramas Mermaid centralizados no microcontrolador, detalhando portas e protocolos (I2C, 1-wire, UART, serial). Esta revis√£o reformata as tabelas, combinando **Destino (Para)** e **Conex√£o** (conex√£o em par√™nteses), mantendo pinagens, tens√µes, e corre√ß√µes anteriores (ex.: **ESP8266 5V P16**).

### **Como Visualizar Diagramas Mermaid**

- **GitHub**: Acesse o arquivo Markdown no reposit√≥rio (docs/v1.0.1/). Diagramas renderizam automaticamente na visualiza√ß√£o.
- **Visual Studio Code**:
  1. Instale a extens√£o **Markdown Preview Enhanced** ou **Markdown Preview Mermaid Support**.
  2. Abra o arquivo Markdown (ex.: `Automacao_Cervejaria_Pinouts_v1.0.1_20250420.md`).
  3. Use o preview (Ctrl+Shift+V ou √≠cone de visualiza√ß√£o) para renderizar tabelas e diagramas.
- **Mermaid Live Editor**:
  1. Copie o c√≥digo Mermaid de cada diagrama (ex.: `graph TD ...`).
  2. Cole em mermaid.live para visualiza√ß√£o interativa.
  3. Salve como SVG/PNG para revis√£o offline.
- **Local**: Salve o arquivo em `automacao-cervejaria/docs/v1.0.1/` e abra com um editor Markdown compat√≠vel.

## **4.1 Controle de Fermenta√ß√£o**

**Componentes** (4 inst√¢ncias):

- **Arduino R4 Connect** (microcontrolador, I2C, 1-wire, digital).
- **DS18B20** (sensor de temperatura, 1-wire).
- **SSR-10DA** (rel√© de estado s√≥lido, digital).
- **INA219** (sensor de corrente/tens√£o, I2C).

### **Arduino R4 Connect**

- **Fun√ß√£o**: Gerencia **DS18B20** (1-wire), **SSR-10DA** (digital), **INA219** (I2C).
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **3V3** | DS18B20, INA219 (*VCC*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | DS18B20, SSR-10DA, INA219 (*GND*) | Terra comum. |
| **D2** | DS18B20 (*DQ*) | Protocolo *1-wire*. |
| **D3** | SSR-10DA (*+ Entrada*) | Sinal digital (*5 V*). |
| **A5 (SDA)** | INA219 (*SDA*) | Protocolo *I2C*. |
| **A4 (SCL)** | INA219 (*SCL*) | Protocolo *I2C*. |

### **DS18B20**

- **Fun√ß√£o**: Medi√ß√£o de temperatura.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | Arduino R4 Connect (*3V3*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | Arduino R4 Connect (*GND*) | Terra comum. |
| **DQ** | Arduino R4 Connect (*D2*) | Protocolo *1-wire*, resistor pull-up *4,7 kŒ©*. |

### **SSR-10DA**

- **Fun√ß√£o**: Controle da **Manta 500W**.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **+ (Entrada)** | Arduino R4 Connect (*D3*) | Sinal digital (*5 V*). |
| **- (Entrada)** | Arduino R4 Connect (*GND*) | Terra comum. |
| **Sa√≠da** | Manta 500W (*-*) | N√£o mapeado (resistor). |

### **INA219**

- **Fun√ß√£o**: Monitoramento de corrente/tens√£o.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | Arduino R4 Connect (*3V3*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | Arduino R4 Connect (*GND*) | Terra comum. |
| **SDA** | Arduino R4 Connect (*A5 SDA*) | Endere√ßo I2C: *0x40* (A0, A1 em GND). |
| **SCL** | Arduino R4 Connect (*A4 SCL*) | Protocolo *I2C*. |
| **A0** | \- (*GND*) | Define endere√ßo I2C *0x40*. |
| **A1** | \- (*GND*) | Define endere√ßo I2C *0x40*. |

**Diagrama** üñºÔ∏è:

```mermaid
graph TD
    A[Arduino R4 Connect]
    A -->|D2, 1-wire| B[DS18B20]
    A -->|D3, Digital| C[SSR-10DA]
    A -->|A5 SDA, A4 SCL, I2C| D[INA219]
    B -->|VCC| E[3,3 V]
    B -->|GND| F[GND]
    C -->|GND| F
    D -->|VCC| E
    D -->|GND| F
    C -->|Sa√≠da| G[Manta 500W]
```

## **4.2 Balan√ßa de Volume**

**Componentes** (3 inst√¢ncias):

- **ESP32-C3** (microcontrolador, I2C, serial).
- **HX711** (conversor ADC, serial).
- **MPU6050** (sensor de movimento, I2C).

### **ESP32-C3**

- **Fun√ß√£o**: Gerencia **HX711** (serial), **MPU6050** (I2C).
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **3V3** | HX711, MPU6050 (*VCC*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | HX711, MPU6050 (*GND*) | Terra comum. |
| **D2 (GPIO2)** | HX711 (*SDA*) | Protocolo *serial* (dados). |
| **D3 (GPIO3)** | HX711 (*SCL*) | Protocolo *serial* (clock). |
| **A5 (SDA, GPIO4)** | MPU6050 (*SDA*) | Protocolo *I2C*. |
| **A4 (SCL, GPIO5)** | MPU6050 (*SCL*) | Protocolo *I2C*. |

### **HX711**

- **Fun√ß√£o**: Conversor ADC (m√≥dulo integrado, 4 pinos).
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | ESP32-C3 (*3V3*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | ESP32-C3 (*GND*) | Terra comum. |
| **SDA** | ESP32-C3 (*D2 GPIO2*) | Protocolo *serial* (dados). |
| **SCL** | ESP32-C3 (*D3 GPIO3*) | Protocolo *serial* (clock). |

### **MPU6050**

- **Fun√ß√£o**: Sensor de movimento.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | ESP32-C3 (*3V3*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | ESP32-C3 (*GND*) | Terra comum. |
| **SDA** | ESP32-C3 (*A5 GPIO4*) | Endere√ßo I2C: *0x68* (AD0 em GND). |
| **SCL** | ESP32-C3 (*A4 GPIO5*) | Protocolo *I2C*. |
| **AD0** | \- (*GND*) | Define endere√ßo I2C *0x68*. |
| **INT** | \- (*Aberto*) | N√£o utilizado (sem interrup√ß√µes). |
| **AUX_DA** | \- (*Aberto*) | N√£o utilizado (sem sensores auxiliares). |
| **AUX_CL** | \- (*Aberto*) | N√£o utilizado (sem sensores auxiliares). |

**Diagrama** üñºÔ∏è:

```mermaid
graph TD
    A[ESP32-C3]
    A -->|D2 GPIO2, Serial| B[HX711]
    A -->|D3 GPIO3, Serial| B
    A -->|A5 GPIO4 SDA, A4 GPIO5 SCL, I2C| C[MPU6050]
    B -->|VCC| D[3,3 V]
    B -->|GND| E[GND]
    C -->|VCC| D
    C -->|GND| E
    C -->|AD0| E
```

## **4.3 Dens√≠metro Flutuante**

**Componentes** (5 inst√¢ncias):

- **ESP32-C3** (microcontrolador, I2C, 1-wire).
- **ICM20948** (sensor de movimento, I2C).
- **DS18B20** (sensor de temperatura, 1-wire).
- **TPS63020** (regulador de tens√£o).
- **INA219** (sensor de corrente/tens√£o, I2C).

### **ESP32-C3**

- **Fun√ß√£o**: Gerencia **ICM20948**, **INA219** (I2C), **DS18B20** (1-wire).
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **3V3** | ICM20948, DS18B20, INA219 (*VCC*) | Alimenta√ß√£o *3,3 V* (via **TPS63020**). |
| **GND** | ICM20948, DS18B20, INA219 (*GND*) | Terra comum. |
| **GPIO18 (P13)** | ICM20948, INA219 (*SDA*) | Protocolo *I2C*. |
| **GPIO19 (P14)** | ICM20948, INA219 (*SCL*) | Protocolo *I2C*. |
| **GPIO2 (P16)** | DS18B20 (*DQ*) | Protocolo *1-wire*. |

### **ICM20948**

- **Fun√ß√£o**: Sensor de movimento.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | ESP32-C3 (*3V3*) | Alimenta√ß√£o *3,3 V* (via **TPS63020**). |
| **GND** | ESP32-C3 (*GND*) | Terra comum. |
| **SDA** | ESP32-C3 (*GPIO18 P13*) | Endere√ßo I2C: *0x68* (AD0 em GND). |
| **SCL** | ESP32-C3 (*GPIO19 P14*) | Protocolo *I2C*. |
| **AD0** | \- (*GND*) | Define endere√ßo I2C *0x68*. |
| **CS** | \- (*Aberto*) | N√£o utilizado (I2C, n√£o SPI). |
| **Fsync** | \- (*Aberto*) | N√£o utilizado. |
| **INT1** | \- (*Aberto*) | N√£o utilizado (sem interrup√ß√µes). |
| **AUX_DA** | \- (*Aberto*) | N√£o utilizado (sem sensores auxiliares). |
| **AUX_CL** | \- (*Aberto*) | N√£o utilizado (sem sensores auxiliares). |
| **REGout** | \- (*Aberto*) | N√£o utilizado (bypass interno). |

### **DS18B20**

- **Fun√ß√£o**: Medi√ß√£o de temperatura.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | ESP32-C3 (*3V3*) | Alimenta√ß√£o *3,3 V* (via **TPS63020**). |
| **GND** | ESP32-C3 (*GND*) | Terra comum. |
| **DQ** | ESP32-C3 (*GPIO2 P16*) | Protocolo *1-wire*, resistor pull-up *4,7 kŒ©*. |

### **TPS63020**

- **Fun√ß√£o**: Regulador de tens√£o.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VIN** | Bateria 18650 (*-*) | Entrada *2,5-5,5 V* (n√£o mapeado). |
| **VOUT** | ESP32-C3, ICM20948, DS18B20, INA219 (*3V3*) | Alimenta√ß√£o *3,3 V*. |
| **GND** | ESP32-C3 (*GND*) | Terra comum. |

### **INA219**

- **Fun√ß√£o**: Monitoramento de corrente/tens√£o.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | ESP32-C3 (*3V3*) | Alimenta√ß√£o *3,3 V* (via **TPS63020**). |
| **GND** | ESP32-C3 (*GND*) | Terra comum. |
| **SDA** | ESP32-C3 (*GPIO18 P13*) | Endere√ßo I2C: *0x40* (A0, A1 em GND). |
| **SCL** | ESP32-C3 (*GPIO19 P14*) | Protocolo *I2C*. |
| **A0** | \- (*GND*) | Define endere√ßo I2C *0x40*. |
| **A1** | \- (*GND*) | Define endere√ßo I2C *0x40*. |

**Diagrama** üñºÔ∏è:

```mermaid
graph TD
    A[ESP32-C3]
    A -->|GPIO18 P13, I2C SDA| B[ICM20948]
    A -->|GPIO19 P14, I2C SCL| B
    A -->|GPIO18 P13, I2C SDA| D[INA219]
    A -->|GPIO19 P14, I2C SCL| D
    A -->|GPIO2 P16, 1-wire| C[DS18B20]
    E[TPS63020] -->|VOUT| F[3,3 V]
    B -->|VCC| F
    C -->|VCC| F
    D -->|VCC| F
    B -->|GND| G[GND]
    C -->|GND| G
    D -->|GND| G
    E -->|VIN| H[Bateria 18650]
```

## **4.4 Controle e Monitoramento**

**Componentes** (4 inst√¢ncias):

- **Mega 2560** (microcontrolador, UART, I2C).
- **ESP8266** (Wi-Fi, UART).
- **DFR0009** (shield I2C para LCD).
- **INA219** (sensor de corrente/tens√£o, I2C).

### **Mega 2560**

- **Fun√ß√£o**: Gerencia **ESP8266** (UART), **DFR0009**, **INA219** (I2C).
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **Vin** | \- (*-*) | Entrada *7-12 V* (n√£o mapeado). |
| **5V** | ESP8266, DFR0009, INA219 (*VCC*) | Alimenta√ß√£o *5 V* (output). |
| **GND** | ESP8266, DFR0009, INA219 (*GND*) | Terra comum. |
| **PD0 (RXD1, 19)** | ESP8266 (*TX*) | Protocolo *UART*. |
| **PD1 (TXD1, 18)** | ESP8266 (*RX*) | Protocolo *UART*. |
| **PF0 (SDA, 20)** | DFR0009, INA219 (*SDA*) | Protocolo *I2C*. |
| **PF1 (SCL, 21)** | DFR0009, INA219 (*SCL*) | Protocolo *I2C*. |

### **ESP8266**

- **Fun√ß√£o**: Comunica√ß√£o Wi-Fi.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **5V (P16)** | Mega 2560 (*5V*) | Alimenta√ß√£o *5 V*, regulada internamente para *3,3 V* (AMS1117-3.3). |
| **GND** | Mega 2560 (*GND*) | Terra comum. |
| **TX** | Mega 2560 (*PD0 RXD1 19*) | Protocolo *UART*. |
| **RX** | Mega 2560 (*PD1 TXD1 18*) | Protocolo *UART*. |
| **RSP (P1)** | \- (*Aberto*) | Reset, n√£o utilizado. |
| **A0** | \- (*Aberto*) | ADC, n√£o utilizado. |
| **D0** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D5** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D6** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D7** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D8** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D1** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D2** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D3** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **D4** | \- (*Aberto*) | GPIO, n√£o utilizado. |
| **3V3** | \- (*Aberto*) | N√£o utilizado (alimenta√ß√£o via *5V*). |

### **DFR0009**

- **Fun√ß√£o**: Shield I2C para LCD 1602.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | Mega 2560 (*5V*) | Alimenta√ß√£o *5 V*. |
| **GND** | Mega 2560 (*GND*) | Terra comum. |
| **SDA** | Mega 2560 (*PF0 SDA 20*) | Endere√ßo I2C: *0x27* (t√≠pico). |
| **SCL** | Mega 2560 (*PF1 SCL 21*) | Protocolo *I2C*, conecta ao LCD 1602. |

### **INA219**

- **Fun√ß√£o**: Monitoramento de corrente/tens√£o.
- **Conex√µes** üìã:

| **Pino (De)** | **Destino (Para)** | **Notas** |
| --- | --- | --- |
| **VCC** | Mega 2560 (*5V*) | Alimenta√ß√£o *5 V*. |
| **GND** | Mega 2560 (*GND*) | Terra comum. |
| **SDA** | Mega 2560 (*PF0 SDA 20*) | Endere√ßo I2C: *0x40* (A0, A1 em GND). |
| **SCL** | Mega 2560 (*PF1 SCL 21*) | Protocolo *I2C*. |
| **A0** | \- (*GND*) | Define endere√ßo I2C *0x40*. |
| **A1** | \- (*GND*) | Define endere√ßo I2C *0x40*. |

**Diagrama** üñºÔ∏è:

```mermaid
graph TD
    A[Mega 2560]
    A -->|PD0 RXD1 19, UART| B[ESP8266]
    A -->|PD1 TXD1 18, UART| B
    A -->|PF0 SDA 20, I2C| C[DFR0009]
    A -->|PF1 SCL 21, I2C| C
    A -->|PF0 SDA 20, I2C| D[INA219]
    A -->|PF1 SCL 21, I2C| D
    B -->|5V P16| E[5 V]
    C -->|VCC| E
    D -->|VCC| E
    B -->|GND| F[GND]
    C -->|GND| F
    D -->|GND| F
    C -->|I2C| G[LCD 1602]
```

## **Resumo do Mapeamento**

- **Componentes Mapeados** (16 inst√¢ncias, 12 √∫nicos):
  - **Controle de Fermenta√ß√£o**: Arduino R4 Connect, DS18B20, SSR-10DA, INA219 (4 inst√¢ncias). ‚úÖ
  - **Balan√ßa de Volume**: ESP32-C3, HX711, MPU6050 (3 inst√¢ncias). ‚úÖ
  - **Dens√≠metro Flutuante**: ESP32-C3, ICM20948, DS18B20, TPS63020, INA219 (5 inst√¢ncias). ‚úÖ
  - **Controle e Monitoramento**: Mega 2560, ESP8266, DFR0009, INA219 (4 inst√¢ncias). ‚úÖ
- **Lacunas**: Nenhuma. Todos os componentes est√£o mapeados com tabelas individuais e diagramas.
- **Ajustes Realizados**:
  - Tabelas reformuladas: **Destino (Para)** e **Conex√£o** combinados, conex√£o em par√™nteses.
  - Corre√ß√µes anteriores mantidas (ex.: **ESP8266 5V P16** conectado a **Mega 2560 5V**).
- **Notas Gerais**:
  - **Componentes Passivos**: Manta 500W, Fus√≠vel 3 A, Bateria 18650, C√©lulas de carga mencionados, sem pinout.
  - **I2C Endere√ßos**:
    - **INA219**: 0x40 (todas as fun√ß√µes, A0/A1 em GND).
    - **ICM20948**: 0x68 (Dens√≠metro Flutuante, AD0 em GND).
    - **MPU6050**: 0x68 (Balan√ßa de Volume, AD0 em GND).
    - **DFR0009**: 0x27 (Controle e Monitoramento).
  - **Resistor Pull-up**: 4,7 kŒ© para **DS18B20** (Controle de Fermenta√ß√£o, Dens√≠metro Flutuante).
  - **Pinos**: Validados sem conflitos (I2C, UART, 1-wire, serial usam pinos distintos).

## **Pr√≥ximos Passos**

- **Valida√ß√£o**: Confirme a formata√ß√£o das tabelas (colunas combinadas), pinouts, conex√µes, endere√ßos I2C, e clareza visual (tabelas, diagramas). Indique ajustes (ex.: pinos alternativos, conex√µes de fus√≠vel, formata√ß√£o adicional).
- **Testes**: Planeje testes em *Maio/Junho 2025* com mult√≠metro (**RM113D**) e ferro de solda (**ANENG SL104**).
- **Documenta√ß√£o**: Atualize esta se√ß√£o no GitHub ap√≥s valida√ß√£o das altera√ß√µes anteriores e desta revis√£o.
- **Compras**: Adquira componentes pendentes at√© *Maio 2025* (ex.: **ESP32-C3**, **INA219**).